{"version":3,"sources":["webpack:///./src/components/workCard.tsx","webpack:///./src/components/works.tsx","webpack:///./src/pages/work.tsx"],"names":["Card","styled","div","WorkCard","props","className","src","image","alt","title","Grid","Works","allWorks","useStaticQuery","allWorksJson","edges","map","w","to","node","slug","Work"],"mappings":"+IAQMA,EAAOC,IAAOC,IAAV,qEAAGD,CAAH,0JA2BKE,EAXE,SAACC,GAChB,OACE,kBAACJ,EAAD,KACE,yBAAKK,UAAU,cACb,yBAAKC,IAAKF,EAAMG,MAAOC,IAAKJ,EAAMK,SAEpC,4BAAKL,EAAMK,SCxBXC,EAAOT,IAAOC,IAAV,kEAAGD,CAAH,6NAuCKU,IA5BD,WACZ,IAcMC,EAdOC,yBAAe,aAcNC,aAAaC,MAEnC,OACE,kBAACL,EAAD,KACGE,EAASI,KAAI,SAACC,GAAD,OACZ,kBAAC,OAAD,CAAMC,GAAE,SAAWD,EAAEE,KAAKC,MACxB,kBAAC,EAAD,CAAUX,MAAOQ,EAAEE,KAAKV,MAAOF,MAAOU,EAAEE,KAAKZ,e,kCCtCvD,oEAeec,UAVF,WACX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKZ,MAAM,SACX,oCACA,kBAAC,IAAD","file":"component---src-pages-work-tsx-e928efb7241c9cd5f4a3.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\ntype WorkCardProps = {\n  title: string\n  image: string\n}\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  img {\n    width: 100%;\n  }\n  .img-holder {\n    height: 230px;\n    overflow: hidden;\n\n    @media only screen and (max-width: 800px) {\n      height: 150px;\n    }\n  }\n`\n\nconst WorkCard = (props: WorkCardProps) => {\n  return (\n    <Card>\n      <div className=\"img-holder\">\n        <img src={props.image} alt={props.title} />\n      </div>\n      <h2>{props.title}</h2>\n    </Card>\n  )\n}\n\nexport default WorkCard\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport WorkCard from \"./workCard\"\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  grid-gap: 2rem;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 780px) {\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  }\n`\n\nconst Works = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allWorksJson {\n        edges {\n          node {\n            title\n            image\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  const allWorks = data.allWorksJson.edges\n\n  return (\n    <Grid>\n      {allWorks.map((w: any) => (\n        <Link to={`/work/${w.node.slug}`}>\n          <WorkCard title={w.node.title} image={w.node.image} />\n        </Link>\n      ))}\n    </Grid>\n  )\n}\n\nexport default Works\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Works from \"../components/works\"\nimport SEO from \"../components/seo\"\n\nconst Work = () => {\n  return (\n    <Layout>\n      <SEO title=\"Work\" />\n      <h1>work</h1>\n      <Works />\n    </Layout>\n  )\n}\n\nexport default Work\n"],"sourceRoot":""}